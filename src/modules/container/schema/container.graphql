type Container {
  id: ID!
  log: String
  status: ContainerStatus!
}

type ContainerStatus {
  created: String!
  path: String!
  name: String!
  state: ContainerState!
  imageSha: String!
  config: ContainerConfig!
  mounts: [ContainerMount]
  networkSettings: ContainerNetworkSettings
}

type ContainerConfig {
  hostname: String!
  domainName: String!
  user: String!
  exposedPorts: [String]
  environmentVariables: [ContainerEnvVar]!
  labels: [ContainerLabel]!
  image: Image!
  workingDir: String
  entrypoint: [String]
  cmd: [String]
}

type ContainerEnvVar {
  name: String!
  value: String!
}

type ContainerLabel {
  name: String!
  value: String!
}

type ContainerState {
  status: String!
  running: Boolean!
  paused: Boolean!
  restarting: Boolean!
  oomKilled: Boolean!
  dead: Boolean!
  pid: Int!
  error: String
  exitCode: Int!
  startedAt: String!
  finishedAt: String!
}

type ContainerMount {
  type: String!
  source: String!
  destination: String!
  mode: String!
  rw: String!
  propagation: String!
}

type ContainerNetworkSettings {
  ports: [ContainerPort]
  networks: [ContainerNetwork]
}

type ContainerPort {
  exposedPort: String
  hostIp: String
  hostPort: String
}

type ContainerNetwork {
  id: String
  name: String
  aliases: [String]
  gateway: String
  ipAddress: String
  macAddress: String
}
